{"version":3,"sources":["webpack:///./src/components/authorization-forms/sign-in-form.vue?540e","webpack:///./src/components/authorization-forms/sign-up-form.vue?fb18","webpack:///./src/views/Login.vue?4f52","webpack:///./src/views/Login.vue?ec2c","webpack:///./src/components/authorization-forms/sign-in-form.vue?ba0e","webpack:///./node_modules/@vuelidate/core/node_modules/vue-demi/lib/index.mjs","webpack:///./node_modules/@vuelidate/core/dist/index.esm.js","webpack:///./node_modules/@vuelidate/validators/dist/index.esm.js","webpack:///./src/components/authorization-forms/sign-in-form.vue","webpack:///./src/components/authorization-forms/sign-in-form.vue?bdbd","webpack:///./src/components/authorization-forms/sign-up-form.vue?0a3f","webpack:///./src/components/authorization-forms/sign-up-form.vue","webpack:///./src/components/authorization-forms/sign-up-form.vue?fad6","webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?a459"],"names":["n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","render","_ctx","_cache","$props","$setup","$data","$options","_component_sign_in_form","_component_sign_up_form","activeIndex","key","onClick","$event","setActiveIndex","onToSignIn","_hoisted_6","onSubmit","submit","novalidate","type","placeholder","v$","email","$error","state","autocomplete","password","disabled","$invalid","isVue3","unwrapObj","obj","ignoreKeys","arguments","length","undefined","Object","keys","reduce","o","k","includes","isFunction","val","isProxy","value","callRule","rule","siblingState","instance","call","normalizeValidatorResponse","result","$valid","createAsyncResult","model","$pending","$dirty","_ref","$response","$lazy","$rewardEarly","watchTargets","$lastInvalidState","$lastCommittedOn","$pendingCounter","$unwatch","concat","ruleResult","err","Promise","reject","resolve","then","data","catch","error","immediate","deep","createSyncResult","_ref2","returnValue","createValidatorResult","config","validatorName","propertyKey","propertyPath","$params","$async","$validator","$watchTargets","message","$message","$model","$propertyPath","$property","sortValidations","validationsRaw","validations","validationKeys","rules","nestedValidators","forEach","v","startsWith","_empty","ROOT_PATH","_call","body","direct","e","_callIgnored","_invoke","_async","f","args","i","apply","this","createValidationResults","resultsCache","path","externalResults","ruleKeys","cachedResult","get","$partial","$path","$touch","$reset","$commit","ruleKey","$externalResults","map","stringError","index","$uid","r","some","$silentErrors","filter","res","$errors","Date","now","set","collectNestedValidationResults","nestedState","nestedExternalResults","nestedValidationKeys","results","nestedKey","setValidations","parentKey","globalConfig","createMetaFields","nestedResults","childResults","allResults","allRes","values","every","modelErrors","nestedErrors","errors","$anyDirty","nr","$validate","mergedConfig","unwatch","assign","s","cachedExternalResults","external","$getResultsForChild","$clearExternalResults","$autoDirty","flush","storage","Map","storedRules","storedRulesKeys","newRulesKeys","hasAllValidators","paramKey","storedRuleResultPair","isValidCache","checkRulesValidity","CollectFlag","COLLECT_ALL","COLLECT_NONE","VuelidateInjectChildResults","Symbol","VuelidateRemoveChildResults","nestedValidations","$scope","childResultsRaw","childResultsKeys","injectChildResultsIntoParent","$registerAs","childScope","$stopPropagation","push","removeChildResultsFromParent","childKey","__vuelidateInjectInstances","__vuelidateRemoveInstances","sendValidationResultsToParent","removeValidationResultsFromParent","ComputedProxyFactory","target","Proxy","prop","useVuelidate","currentVueInstance","componentOptions","proxy","uid","_uid","validationResults","vuelidateExternalResults","validationsConfig","validationsWatchTarget","newValidationRules","isObject","Array","isArray","normalizeValidatorObject","validator","unwrapValidatorResponse","unwrapNormalizedValidator","withParams","Error","validatorObj","withMessage","withAsync","validators","collection","others","previous","collectionItem","collectionEntryResult","entries","all","property","innerValidators","propertyResult","currentValidator","validatorFunction","context","a","b","req","isNaN","getTime","_","String","len","regex","expr","test","emailRegex","email$1","minLength$1","minLength","min","required$1","trim","required","sameAs$1","equalTo","sameAs","otherName","urlRegex","name","setup","methods","$store","dispatch","getUser","$router","HOME","__exports__","style","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","username","fullname","birthday","confirm","$emit","components","SignUpForm","SignInForm"],"mappings":"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","file":"js/chunk-5eec9f6d.0bcba6a9.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./sign-in-form.vue?vue&type=style&index=0&id=be8a5ec8&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./sign-up-form.vue?vue&type=style&index=0&id=535891ec&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Login.vue?vue&type=style&index=0&id=51d57880&lang=scss&scoped=true\"","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-51d57880\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"auth\" }\nconst _hoisted_2 = { class: \"auth__help_text\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Don't have an account?\", -1))\nconst _hoisted_4 = { class: \"auth__help_text\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Already have an account?\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_sign_in_form = _resolveComponent(\"sign-in-form\")!\n  const _component_sign_up_form = _resolveComponent(\"sign-up-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.activeIndex === 0)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          _createVNode(_component_sign_in_form),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _hoisted_3,\n            _createElementVNode(\"div\", {\n              class: \"auth__link\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.setActiveIndex(1)))\n            }, \"Sign up\")\n          ])\n        ], 64))\n      : _createCommentVNode(\"\", true),\n    (_ctx.activeIndex === 1)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n          _createVNode(_component_sign_up_form, {\n            onToSignIn: _cache[1] || (_cache[1] = ($event: any) => (_ctx.setActiveIndex(0)))\n          }),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _hoisted_5,\n            _createElementVNode(\"div\", {\n              class: \"auth__link\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.setActiveIndex(0)))\n            }, \"Sign in\")\n          ])\n        ], 64))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-be8a5ec8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"form__group\" }, [\n  /*#__PURE__*/_createElementVNode(\"h1\", { class: \"form__title title-semi-32\" }, \"Sign in\")\n], -1))\nconst _hoisted_2 = { class: \"form__group\" }\nconst _hoisted_3 = { class: \"form__input_container\" }\nconst _hoisted_4 = { class: \"form__group\" }\nconst _hoisted_5 = { class: \"form__input_container\" }\nconst _hoisted_6 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(($event: any) => (_ctx.submit()), [\"prevent\"])),\n    novalidate: \"\"\n  }, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          class: _normalizeClass([\"common-input title-regular-14\", {\r\n            'input--error' : _ctx.v$.email.$error,\r\n            'input--success' : !_ctx.v$.email.$error && _ctx.state.email\r\n          }]),\n          autocomplete: \"on\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.state.email) = $event))\n        }, null, 2), [\n          [_vModelText, _ctx.state.email]\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          class: _normalizeClass([\"common-input title-regular-14\", {\r\n            'input--error' : _ctx.v$.password.$error,\r\n            'input--success' : !_ctx.v$.password.$error && _ctx.state.password\r\n          }]),\n          autocomplete: \"on\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.state.password) = $event))\n        }, null, 2), [\n          [_vModelText, _ctx.state.password]\n        ])\n      ])\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"form__btn primary-btn\",\n      type: \"submit\",\n      disabled: _ctx.v$.$invalid\n    }, \"Sign in\", 8, _hoisted_6)\n  ], 32))\n}","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","import { isReactive, isReadonly, unref, ref, computed, watch, reactive, isRef, nextTick, inject, provide, getCurrentInstance, isVue3, onBeforeMount, onBeforeUnmount } from 'vue-demi';\n\nfunction unwrapObj(obj) {\n  let ignoreKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return Object.keys(obj).reduce((o, k) => {\n    if (ignoreKeys.includes(k)) return o;\n    o[k] = unref(obj[k]);\n    return o;\n  }, {});\n}\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\n\n/**\n * Response form a raw Validator function.\n * Should return a Boolean or an object with $invalid property.\n * @typedef {Boolean | { $valid: Boolean }} ValidatorResponse\n */\n\n/**\n * Calls a validation rule by unwrapping its value first from a ref.\n * @param {Validator} rule\n * @param {Ref} value\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @return {Promise<ValidatorResponse> | ValidatorResponse}\n */\n\nfunction callRule(rule, value, siblingState, instance) {\n  return rule.call(instance, unref(value), unref(siblingState), instance);\n}\n/**\n * Normalizes the validator result\n * Allows passing a boolean of an object like `{ $valid: Boolean }`\n * @param {ValidatorResponse} result - Validator result\n * @return {boolean}\n */\n\n\nfunction normalizeValidatorResponse(result) {\n  return result.$valid !== undefined ? !result.$valid : !result;\n}\n/**\n * Returns the result of an async validator.\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $pending\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Ref<*>[]} watchTargets\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @param {Ref<Number>} $lastCommittedOn\n * @return {{ $invalid: Ref<Boolean>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createAsyncResult(rule, model, $pending, $dirty, _ref, $response, instance) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref;\n  let watchTargets = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  let siblingState = arguments.length > 8 ? arguments[8] : undefined;\n  let $lastInvalidState = arguments.length > 9 ? arguments[9] : undefined;\n  let $lastCommittedOn = arguments.length > 10 ? arguments[10] : undefined;\n  const $invalid = ref(!!$dirty.value);\n  const $pendingCounter = ref(0);\n  $pending.value = false;\n  const $unwatch = watch([model, $dirty].concat(watchTargets, $lastCommittedOn), () => {\n    if ( // if $lazy and not dirty, return\n    $lazy && !$dirty.value || // if in $rewardEarly mode and no previous errors, nothing pending, return\n    $rewardEarly && !$lastInvalidState.value && !$pending.value) {\n      return;\n    }\n\n    let ruleResult; // make sure we dont break if a validator throws\n\n    try {\n      ruleResult = callRule(rule, model, siblingState, instance);\n    } catch (err) {\n      // convert to a promise, so we can handle it async\n      ruleResult = Promise.reject(err);\n    }\n\n    $pendingCounter.value++;\n    $pending.value = !!$pendingCounter.value; // ensure $invalid is false, while validator is resolving\n\n    $invalid.value = false;\n    Promise.resolve(ruleResult).then(data => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = data;\n      $invalid.value = normalizeValidatorResponse(data);\n    }).catch(error => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = error;\n      $invalid.value = true;\n    });\n  }, {\n    immediate: true,\n    deep: typeof model === 'object'\n  });\n  return {\n    $invalid,\n    $unwatch\n  };\n}\n/**\n * Returns the result of a sync validator\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {Boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @return {{$unwatch: (function(): {}), $invalid: ComputedRef<boolean>}}\n */\n\n\nfunction createSyncResult(rule, model, $dirty, _ref2, $response, instance, siblingState, $lastInvalidState) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref2;\n\n  const $unwatch = () => ({});\n\n  const $invalid = computed(() => {\n    if ( // return early if $lazy mode and not touched\n    $lazy && !$dirty.value || // If $rewardEarly mode is ON and last invalid was false (no error), return it.\n    // If we want to invalidate, we just flip the last state to true, causing the computed to run again\n    $rewardEarly && !$lastInvalidState.value) {\n      return false;\n    }\n\n    let returnValue = true;\n\n    try {\n      const result = callRule(rule, model, siblingState, instance);\n      $response.value = result;\n      returnValue = normalizeValidatorResponse(result);\n    } catch (err) {\n      $response.value = err;\n    }\n\n    return returnValue;\n  });\n  return {\n    $unwatch,\n    $invalid\n  };\n}\n/**\n * Returns the validation result.\n * Detects async and sync validators.\n * @param {NormalizedValidator} rule\n * @param {Ref<*>} model\n * @param {Ref<boolean>} $dirty\n * @param {GlobalConfig} config - Vuelidate config\n * @param {VueInstance} instance - component instance\n * @param {string} validatorName - name of the current validator\n * @param {string} propertyKey - the current property we are validating\n * @param {string} propertyPath - the deep path to the validated property\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState - the last invalid state\n * @param {Ref<Number>} $lastCommittedOn - the last time $commit was called\n * @return {{ $params: *, $message: Ref<String>, $pending: Ref<Boolean>, $invalid: Ref<Boolean>, $response: Ref<*>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createValidatorResult(rule, model, $dirty, config, instance, validatorName, propertyKey, propertyPath, siblingState, $lastInvalidState, $lastCommittedOn) {\n  const $pending = ref(false);\n  const $params = rule.$params || {};\n  const $response = ref(null);\n  let $invalid;\n  let $unwatch;\n\n  if (rule.$async) {\n    ({\n      $invalid,\n      $unwatch\n    } = createAsyncResult(rule.$validator, model, $pending, $dirty, config, $response, instance, rule.$watchTargets, siblingState, $lastInvalidState, $lastCommittedOn));\n  } else {\n    ({\n      $invalid,\n      $unwatch\n    } = createSyncResult(rule.$validator, model, $dirty, config, $response, instance, siblingState, $lastInvalidState));\n  }\n\n  const message = rule.$message;\n  const $message = isFunction(message) ? computed(() => message(unwrapObj({\n    $pending,\n    $invalid,\n    $params: unwrapObj($params),\n    // $params can hold refs, so we unwrap them for easy access\n    $model: model,\n    $response,\n    $validator: validatorName,\n    $propertyPath: propertyPath,\n    $property: propertyKey\n  }))) : message || '';\n  return {\n    $message,\n    $params,\n    $pending,\n    $invalid,\n    $response,\n    $unwatch\n  };\n}\n\n/**\n * Sorts a validation definition into rules, configs and nested validators.\n * @param {Object<NormalizedValidator|Function>} validationsRaw\n * @return {{ rules: Object<NormalizedValidator>, nestedValidators: Object, config: GlobalConfig }}\n */\n\nfunction sortValidations() {\n  let validationsRaw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const validations = unref(validationsRaw);\n  const validationKeys = Object.keys(validations);\n  const rules = {};\n  const nestedValidators = {};\n  const config = {};\n  validationKeys.forEach(key => {\n    const v = validations[key];\n\n    switch (true) {\n      // If it is already normalized, use it\n      case isFunction(v.$validator):\n        rules[key] = v;\n        break;\n      // If it is just a function, normalize it first\n      // into { $validator: <Fun> }\n\n      case isFunction(v):\n        rules[key] = {\n          $validator: v\n        };\n        break;\n      // Catch $-prefixed properties as config\n\n      case key.startsWith('$'):\n        config[key] = v;\n        break;\n      // If it doesn’t match any of the above,\n      // treat as nestedValidators state property\n\n      default:\n        nestedValidators[key] = v;\n    }\n  });\n  return {\n    rules,\n    nestedValidators,\n    config\n  };\n}\n\nfunction _empty() {}\n\nconst ROOT_PATH = '__root';\n/** @typedef {import('vue-demi').ComponentPublicInstance} VueInstance */\n\n/** @typedef {import('vue-demi').ComputedRef} ComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapRef} UnwrapRef */\n\n/** @typedef {import('vue-demi').WatchStopHandle} WatchStopHandle */\n\n/** @typedef {import('vue-demi').WritableComputedRef} WritableComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapNestedRefs} UnwrapNestedRefs */\n\n/**\n * @typedef NormalizedValidator\n * @property {Validator} $validator\n * @property {String | Ref<String> | function(*): string} [$message]\n * @property {Object | Ref<Object>} [$params]\n * @property {Object | Ref<Object>} [$async]\n * @property {Ref<*>[]} [$watchTargets]\n */\n\n/**\n * Raw validator function, before being normalized\n * Can return a Promise or a {@see ValidatorResponse}\n * @typedef {function(*): ((Promise<ValidatorResponse> | ValidatorResponse))} Validator\n */\n\n/**\n * @typedef ErrorObject\n * @property {Ref<String>} $message - Reactive error message\n * @property {Ref<Object>} $params - Params passed from withParams\n * @property {Ref<Boolean>} $pending - If validation is pending\n * @property {String} $property - State key\n * @property {String} $propertyPath - Dot notation path to state\n * @property {String} $validator - Validator name\n * @property {String} $uid - Unique identifier\n */\n\n/**\n * @typedef ValidationResult\n * @property {Ref<Boolean>} $pending\n * @property {Ref<Boolean>} $dirty\n * @property {Ref<Boolean>} $invalid\n * @property {Ref<Boolean>} $error\n * @property {Ref<String>} $path\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} $commit\n */\n\n/**\n * Creates the main Validation Results object for a state tree\n * Walks the tree's top level branches\n * @param {Object<NormalizedValidator>} rules - Rules for the current state tree\n * @param {Object} model - Current state value\n * @param {String} key - Key for the current state tree\n * @param {ResultsStorage} [resultsCache] - A cache map of all the validators\n * @param {String} [path] - the current property path\n * @param {GlobalConfig} [config] - the config object\n * @param {VueInstance} instance\n * @param {ComputedRef<Object>} externalResults\n * @param {Object} siblingState\n * @return {ValidationResult | {}}\n */\n\nfunction _call(body, then, direct) {\n  if (direct) {\n    return then ? then(body()) : body();\n  }\n\n  try {\n    var result = Promise.resolve(body());\n    return then ? result.then(then) : result;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n/**\n * Collects the validation results of all nested state properties\n * @param {Object<NormalizedValidator|Function>} validations - The validation\n * @param {Object} nestedState - Current state\n * @param {String} path - Path to current property\n * @param {ResultsStorage} resultsCache - Validations cache map\n * @param {GlobalConfig} config - The config object\n * @param {VueInstance} instance - The current Vue instance\n * @param {ComputedRef<object>} nestedExternalResults - The external results for this nested collection\n * @return {Object<string, VuelidateState>}\n */\n\n\nfunction _callIgnored(body, direct) {\n  return _call(body, _empty, direct);\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nfunction createValidationResults(rules, model, key, resultsCache, path, config, instance, externalResults, siblingState) {\n  // collect the property keys\n  const ruleKeys = Object.keys(rules);\n  const cachedResult = resultsCache.get(path, rules);\n  const $dirty = ref(false); // state for the $rewardEarly option\n\n  /** The last invalid state of this property */\n\n  const $lastInvalidState = ref(false);\n  /** The last time $commit was called. Used to re-trigger async calls */\n\n  const $lastCommittedOn = ref(0);\n\n  if (cachedResult) {\n    // if the rules are the same as before, use the cached results\n    if (!cachedResult.$partial) return cachedResult; // remove old watchers\n\n    cachedResult.$unwatch(); // use the `$dirty.value`, so we dont save references by accident\n\n    $dirty.value = cachedResult.$dirty.value;\n  }\n\n  const result = {\n    // restore $dirty from cache\n    $dirty,\n    $path: path,\n    $touch: () => {\n      if (!$dirty.value) $dirty.value = true;\n    },\n    $reset: () => {\n      if ($dirty.value) $dirty.value = false;\n    },\n    $commit: () => {}\n  };\n  /**\n   * If there are no validation rules, it is most likely\n   * a top level state, aka root\n   */\n\n  if (!ruleKeys.length) {\n    // if there are cached results, we should overwrite them with the new ones\n    cachedResult && resultsCache.set(path, rules, result);\n    return result;\n  }\n\n  ruleKeys.forEach(ruleKey => {\n    result[ruleKey] = createValidatorResult(rules[ruleKey], model, result.$dirty, config, instance, ruleKey, key, path, siblingState, $lastInvalidState, $lastCommittedOn);\n  });\n  result.$externalResults = computed(() => {\n    if (!externalResults.value) return [];\n    return [].concat(externalResults.value).map((stringError, index) => ({\n      $propertyPath: path,\n      $property: key,\n      $validator: '$externalResults',\n      $uid: `${path}-externalResult-${index}`,\n      $message: stringError,\n      $params: {},\n      $response: null,\n      $pending: false\n    }));\n  });\n  result.$invalid = computed(() => {\n    const r = ruleKeys.some(ruleKey => unref(result[ruleKey].$invalid)); // cache the last invalid state\n\n    $lastInvalidState.value = r;\n    return !!result.$externalResults.value.length || r;\n  });\n  result.$pending = computed(() => ruleKeys.some(ruleKey => unref(result[ruleKey].$pending)));\n  result.$error = computed(() => result.$dirty.value ? result.$pending.value || result.$invalid.value : false);\n  result.$silentErrors = computed(() => ruleKeys.filter(ruleKey => unref(result[ruleKey].$invalid)).map(ruleKey => {\n    const res = result[ruleKey];\n    return reactive({\n      $propertyPath: path,\n      $property: key,\n      $validator: ruleKey,\n      $uid: `${path}-${ruleKey}`,\n      $message: res.$message,\n      $params: res.$params,\n      $response: res.$response,\n      $pending: res.$pending\n    });\n  }).concat(result.$externalResults.value));\n  result.$errors = computed(() => result.$dirty.value ? result.$silentErrors.value : []);\n\n  result.$unwatch = () => ruleKeys.forEach(ruleKey => {\n    result[ruleKey].$unwatch();\n  });\n\n  result.$commit = () => {\n    $lastInvalidState.value = true;\n    $lastCommittedOn.value = Date.now();\n  };\n\n  resultsCache.set(path, rules, result);\n  return result;\n}\n\nfunction collectNestedValidationResults(validations, nestedState, path, resultsCache, config, instance, nestedExternalResults) {\n  const nestedValidationKeys = Object.keys(validations); // if we have no state, return empty object\n\n  if (!nestedValidationKeys.length) return {};\n  return nestedValidationKeys.reduce((results, nestedKey) => {\n    // build validation results for nested state\n    results[nestedKey] = setValidations({\n      validations: validations[nestedKey],\n      state: nestedState,\n      key: nestedKey,\n      parentKey: path,\n      resultsCache,\n      globalConfig: config,\n      instance,\n      externalResults: nestedExternalResults\n    });\n    return results;\n  }, {});\n}\n/**\n * Generates the Meta fields from the results\n * @param {ValidationResult|{}} results\n * @param {Object.<string, VuelidateState>} nestedResults\n * @param {Object.<string, ValidationResult>} childResults\n * @return {{$anyDirty: Ref<Boolean>, $error: Ref<Boolean>, $invalid: Ref<Boolean>, $errors: Ref<ErrorObject[]>, $dirty: Ref<Boolean>, $touch: Function, $reset: Function }}\n */\n\n\nfunction createMetaFields(results, nestedResults, childResults) {\n  const allResults = computed(() => [nestedResults, childResults].filter(res => res).reduce((allRes, res) => {\n    return allRes.concat(Object.values(unref(res)));\n  }, [])); // returns `$dirty` as true, if all children are dirty\n\n  const $dirty = computed({\n    get() {\n      return results.$dirty.value || (allResults.value.length ? allResults.value.every(r => r.$dirty) : false);\n    },\n\n    set(v) {\n      results.$dirty.value = v;\n    }\n\n  });\n  const $silentErrors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$silentErrors) || []; // collect all nested and child $silentErrors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$silentErrors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$silentErrors);\n    }, []); // merge the $silentErrors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $errors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$errors) || []; // collect all nested and child $errors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$errors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$errors);\n    }, []); // merge the $errors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $invalid = computed(() => // if any of the nested values is invalid\n  allResults.value.some(r => r.$invalid) || // or if the current state is invalid\n  unref(results.$invalid) || // fallback to false if is root\n  false);\n  const $pending = computed(() => // if any of the nested values is pending\n  allResults.value.some(r => unref(r.$pending)) || // if any of the current state validators is pending\n  unref(results.$pending) || // fallback to false if is root\n  false);\n  const $anyDirty = computed(() => allResults.value.some(r => r.$dirty) || allResults.value.some(r => r.$anyDirty) || $dirty.value);\n  const $error = computed(() => $dirty.value ? $pending.value || $invalid.value : false);\n\n  const $touch = () => {\n    // call the root $touch\n    results.$touch(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$touch();\n    });\n  };\n\n  const $commit = () => {\n    // call the root $touch\n    results.$commit(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$commit();\n    });\n  };\n\n  const $reset = () => {\n    // reset the root $dirty state\n    results.$reset(); // reset all the children $dirty states\n\n    allResults.value.forEach(result => {\n      result.$reset();\n    });\n  }; // Ensure that if all child and nested results are $dirty, this also becomes $dirty\n\n\n  if (allResults.value.length && allResults.value.every(nr => nr.$dirty)) $touch();\n  return {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  };\n}\n/**\n * @typedef VuelidateState\n * @property {WritableComputedRef<any>} $model\n * @property {ComputedRef<Boolean>} $dirty\n * @property {ComputedRef<Boolean>} $error\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<Boolean>} $invalid\n * @property {ComputedRef<Boolean>} $anyDirty\n * @property {ComputedRef<Boolean>} $pending\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {String} $path\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} [$validate]\n * @property {Function} [$getResultsForChild]\n * @property {Object.<string, VuelidateState>}\n */\n\n/**\n * Main Vuelidate bootstrap function.\n * Used both for Composition API in `setup` and for Global App usage.\n * Used to collect validation state, when walking recursively down the state tree\n * @param {Object} params\n * @param {Object<NormalizedValidator|Function>} params.validations\n * @param {Object} params.state\n * @param {String} [params.key] - Current state property key. Used when being called on nested items\n * @param {String} [params.parentKey] - Parent state property key. Used when being called recursively\n * @param {Object<string, ValidationResult>} [params.childResults] - Used to collect child results.\n * @param {ResultsStorage} params.resultsCache - The cached validation results\n * @param {VueInstance} params.instance - The current Vue instance\n * @param {GlobalConfig} params.globalConfig - The validation config, passed to this setValidations instance.\n * @param {UnwrapNestedRefs<object> | Ref<Object>} params.externalResults - External validation results\n * @return {UnwrapNestedRefs<VuelidateState>}\n */\n\n\nfunction setValidations(_ref) {\n  /**\n   * Executes the validators and returns the result.\n   * @return {Promise<boolean>}\n   */\n  const $validate = _async(function () {\n    if (!$dirty.value) $touch();\n    return _invoke(function () {\n      if (mergedConfig.$rewardEarly) {\n        $commit(); // await the watchers\n\n        return _callIgnored(nextTick);\n      }\n    }, function () {\n      // await the watchers\n      return _call(nextTick, function () {\n        return new Promise(resolve => {\n          // return whether it is valid or not\n          if (!$pending.value) return resolve(!$invalid.value);\n          const unwatch = watch($pending, () => {\n            resolve(!$invalid.value);\n            unwatch();\n          });\n        });\n      });\n    });\n  });\n  /**\n   * Returns a child component's results, based on registration name\n   * @param {string} key\n   * @return {VuelidateState}\n   */\n\n\n  let {\n    validations,\n    state,\n    key,\n    parentKey,\n    childResults,\n    resultsCache,\n    globalConfig = {},\n    instance,\n    externalResults\n  } = _ref;\n  const path = parentKey ? `${parentKey}.${key}` : key; // Sort out the validation object into:\n  // – rules = validators for current state tree fragment\n  // — nestedValidators = nested state fragments keys that might contain more validators\n  // – config = configuration properties that affect this state fragment\n\n  const {\n    rules,\n    nestedValidators,\n    config\n  } = sortValidations(validations);\n  const mergedConfig = Object.assign({}, globalConfig, config); // create protected state for cases when the state branch does not exist yet.\n  // This protects when using the OptionsAPI as the data is bound after the setup method\n\n  const nestedState = key ? computed(() => {\n    const s = unref(state);\n    return s ? unref(s[key]) : undefined;\n  }) : state; // cache the external results, so we can revert back to them\n\n  const cachedExternalResults = Object.assign({}, unref(externalResults) || {});\n  const nestedExternalResults = computed(() => {\n    const results = unref(externalResults);\n    if (!key) return results;\n    return results ? unref(results[key]) : undefined;\n  }); // Use rules for the current state fragment and validate it\n\n  const results = createValidationResults(rules, nestedState, key, resultsCache, path, mergedConfig, instance, nestedExternalResults, state); // Use nested keys to repeat the process\n  // *WARN*: This is recursive\n\n  const nestedResults = collectNestedValidationResults(nestedValidators, nestedState, path, resultsCache, mergedConfig, instance, nestedExternalResults); // Collect and merge this level validation results\n  // with all nested validation results\n\n  const {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  } = createMetaFields(results, nestedResults, childResults);\n  /**\n   * If we have no `key`, this is the top level state\n   * We dont need `$model` there.\n   */\n\n  const $model = key ? computed({\n    get: () => unref(nestedState),\n    set: val => {\n      $dirty.value = true;\n      const s = unref(state);\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n\n      if (isRef(s[key])) {\n        s[key].value = val;\n      } else {\n        s[key] = val;\n      }\n    }\n  }) : null;\n\n  if (key && mergedConfig.$autoDirty) {\n    watch(nestedState, () => {\n      if (!$dirty.value) $touch();\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n    }, {\n      flush: 'sync'\n    });\n  }\n\n  function $getResultsForChild(key) {\n    return (childResults.value || {})[key];\n  }\n\n  function $clearExternalResults() {\n    if (isRef(externalResults)) {\n      externalResults.value = cachedExternalResults;\n    } else {\n      // if the external results state was empty, we need to delete every property, one by one\n      if (Object.keys(cachedExternalResults).length === 0) {\n        Object.keys(externalResults).forEach(k => {\n          delete externalResults[k];\n        });\n      } else {\n        // state was not empty, so we just assign it back into the current state\n        Object.assign(externalResults, cachedExternalResults);\n      }\n    }\n  }\n\n  return reactive(Object.assign({}, results, {\n    // NOTE: The order here is very important, since we want to override\n    // some of the *results* meta fields with the collective version of it\n    // that includes the results of nested state validation results\n    $model,\n    $dirty,\n    $error,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $pending,\n    $touch,\n    $reset,\n    $path: path || ROOT_PATH,\n    $silentErrors,\n    $validate,\n    $commit\n  }, childResults && {\n    $getResultsForChild,\n    $clearExternalResults\n  }, nestedResults));\n}\n\nclass ResultsStorage {\n  constructor() {\n    this.storage = new Map();\n  }\n  /**\n   * Stores a validation result, and its rules by its path\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {ValidationResult} result\n   */\n\n\n  set(path, rules, result) {\n    this.storage.set(path, {\n      rules,\n      result\n    });\n  }\n  /**\n   * Check if the stored `results` for the provided `path` have the same `rules` compared to 'storedRules'\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {Object<NormalizedValidator>} storedRules\n   * @return {Boolean}\n   */\n\n\n  checkRulesValidity(path, rules, storedRules) {\n    const storedRulesKeys = Object.keys(storedRules);\n    const newRulesKeys = Object.keys(rules);\n    if (newRulesKeys.length !== storedRulesKeys.length) return false;\n    const hasAllValidators = newRulesKeys.every(ruleKey => storedRulesKeys.includes(ruleKey));\n    if (!hasAllValidators) return false;\n    return newRulesKeys.every(ruleKey => {\n      if (!rules[ruleKey].$params) return true;\n      return Object.keys(rules[ruleKey].$params).every(paramKey => {\n        // make sure to unwrap before comparing\n        return unref(storedRules[ruleKey].$params[paramKey]) === unref(rules[ruleKey].$params[paramKey]);\n      });\n    });\n  }\n  /**\n   * Returns the matched result if catche is valid\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @return {{$partial: boolean, $dirty: Ref<Boolean>, $unwatch: function}|undefined|ValidationResult}\n   */\n\n\n  get(path, rules) {\n    const storedRuleResultPair = this.storage.get(path);\n    if (!storedRuleResultPair) return undefined;\n    const {\n      rules: storedRules,\n      result\n    } = storedRuleResultPair;\n    const isValidCache = this.checkRulesValidity(path, rules, storedRules);\n    const $unwatch = result.$unwatch ? result.$unwatch : () => ({});\n    if (!isValidCache) return {\n      $dirty: result.$dirty,\n      $partial: true,\n      $unwatch\n    };\n    return result;\n  }\n\n}\n\nconst CollectFlag = {\n  COLLECT_ALL: true,\n  COLLECT_NONE: false\n};\nconst VuelidateInjectChildResults = Symbol('vuelidate#injectChiildResults');\nconst VuelidateRemoveChildResults = Symbol('vuelidate#removeChiildResults');\n/**\n * Create helpers to collect validation state from child components\n * @param {Object} params\n * @param {String | Number | Boolean} params.$scope - Parent component scope\n * @return {{sendValidationResultsToParent: function[], childResults: ComputedRef<Object>, removeValidationResultsFromParent: function[]}}\n */\n\nfunction nestedValidations(_ref) {\n  let {\n    $scope,\n    instance\n  } = _ref;\n  const childResultsRaw = {};\n  const childResultsKeys = ref([]);\n  const childResults = computed(() => childResultsKeys.value.reduce((results, key) => {\n    results[key] = unref(childResultsRaw[key]);\n    return results;\n  }, {}));\n  /**\n   * Allows children to send validation data up to their parent.\n   * @param {Object} results - the results\n   * @param {Object} args\n   * @param {String} args.$registerAs - the $registeredAs key\n   * @param {String | Number | Boolean} args.$scope - the $scope key\n   */\n\n  function injectChildResultsIntoParent(results, _ref2) {\n    let {\n      $registerAs: key,\n      $scope: childScope,\n      $stopPropagation\n    } = _ref2;\n    if ($stopPropagation || $scope === CollectFlag.COLLECT_NONE || childScope === CollectFlag.COLLECT_NONE || $scope !== CollectFlag.COLLECT_ALL && $scope !== childScope) return;\n    childResultsRaw[key] = results;\n    childResultsKeys.value.push(key);\n  } // combine with other `injectChildResultsIntoParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateInjectInstances = [].concat(instance.__vuelidateInjectInstances || [], injectChildResultsIntoParent);\n  /**\n   * Allows children to remove the validation data from their parent, before getting destroyed.\n   * @param {String} key - the registeredAs key\n   */\n\n  function removeChildResultsFromParent(key) {\n    // remove the key\n    childResultsKeys.value = childResultsKeys.value.filter(childKey => childKey !== key); // remove the stored data for the key\n\n    delete childResultsRaw[key];\n  } // combine with other `removeChildResultsFromParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateRemoveInstances = [].concat(instance.__vuelidateRemoveInstances || [], removeChildResultsFromParent); // inject the `injectChildResultsIntoParent` method, into the current scope\n\n  const sendValidationResultsToParent = inject(VuelidateInjectChildResults, []); // provide to all of its children the send results to parent function\n\n  provide(VuelidateInjectChildResults, instance.__vuelidateInjectInstances);\n  const removeValidationResultsFromParent = inject(VuelidateRemoveChildResults, []); // provide to all of its children the remove results  function\n\n  provide(VuelidateRemoveChildResults, instance.__vuelidateRemoveInstances);\n  return {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  };\n}\n\n/**\n * Helper proxy for instance property access. It makes every reference\n * reactive for the validation function\n * @param target\n * @return {*|ComputedRef<*>}\n */\n\nfunction ComputedProxyFactory(target) {\n  return new Proxy(target, {\n    get(target, prop) {\n      return typeof target[prop] === 'object' ? ComputedProxyFactory(target[prop]) : computed(() => target[prop]);\n    }\n\n  });\n}\n\n/**\n * @typedef GlobalConfig\n * @property {String} [$registerAs] - Config Object\n * @property {String | Number | Symbol} [$scope] - A scope to limit child component registration\n * @property {Boolean} [$stopPropagation] - Tells a Vue component to stop sending its results up to the parent\n * @property {Ref<Object>} [$externalResults] - External error messages, like from server validation.\n * @property {Boolean} [$autoDirty] - Should the form watch for state changed, and automatically set `$dirty` to true.\n * @property {Boolean} [$lazy] - Should the validations be lazy, and run only after they are dirty\n * @property {Boolean} [$rewardEarly] - Once valid, re-runs property validators only on manual calls of $commit\n */\n\n/**\n * Composition API compatible Vuelidate\n * Use inside the `setup` lifecycle hook\n * @param {Object | GlobalConfig} [validations] - Validations Object or the globalConfig.\n * @param {Object} [state] - State object - required if `validations` is a validation object.\n * @param {GlobalConfig} [globalConfig] - Config Object\n * @return {ComputedRef<*>}\n */\n\nfunction useVuelidate(validations, state) {\n  let globalConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // if we pass only one argument, its most probably the globalConfig.\n  // This use case is so parents can just collect results of child forms.\n  if (arguments.length === 1) {\n    globalConfig = validations;\n    validations = undefined;\n    state = undefined;\n  }\n\n  let {\n    $registerAs,\n    $scope = CollectFlag.COLLECT_ALL,\n    $stopPropagation,\n    $externalResults,\n    currentVueInstance\n  } = globalConfig;\n  const instance = currentVueInstance || getCurrentInstance();\n  const componentOptions = instance ? isVue3 ? instance.type : instance.proxy.$options : {}; // if there is no registration name, add one.\n\n  if (!$registerAs && instance) {\n    // NOTE:\n    // ._uid // Vue 2.x Composition-API plugin\n    // .uid // Vue 3.0\n    const uid = instance.uid || instance._uid;\n    $registerAs = `_vuelidate_${uid}`;\n  }\n\n  const validationResults = ref({});\n  const resultsCache = new ResultsStorage();\n  const {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  } = instance ? nestedValidations({\n    $scope,\n    instance\n  }) : {\n    childResults: ref({})\n  }; // Options API\n\n  if (!validations && componentOptions.validations) {\n    const rules = componentOptions.validations;\n    state = ref({});\n    onBeforeMount(() => {\n      // Delay binding state to validations defined with the Options API until mounting, when the data\n      // has been attached to the component instance. From that point on it will be reactive.\n      state.value = instance.proxy;\n      watch(() => isFunction(rules) ? rules.call(state.value, new ComputedProxyFactory(state.value)) : rules, validations => {\n        validationResults.value = setValidations({\n          validations,\n          state,\n          childResults,\n          resultsCache,\n          globalConfig,\n          instance: instance.proxy,\n          externalResults: $externalResults || instance.proxy.vuelidateExternalResults\n        });\n      }, {\n        immediate: true\n      });\n    });\n    globalConfig = componentOptions.validationsConfig || globalConfig;\n  } else {\n    const validationsWatchTarget = isRef(validations) || isProxy(validations) ? validations // wrap plain objects in a reactive, so we can track changes if they have computed in them.\n    : reactive(validations || {});\n    watch(validationsWatchTarget, newValidationRules => {\n      validationResults.value = setValidations({\n        validations: newValidationRules,\n        state,\n        childResults,\n        resultsCache,\n        globalConfig,\n        instance: instance ? instance.proxy : {},\n        externalResults: $externalResults\n      });\n    }, {\n      immediate: true\n    });\n  }\n\n  if (instance) {\n    // send all the data to the parent when the function is invoked inside setup.\n    sendValidationResultsToParent.forEach(f => f(validationResults, {\n      $registerAs,\n      $scope,\n      $stopPropagation\n    })); // before this component is destroyed, remove all the data from the parent.\n\n    onBeforeUnmount(() => removeValidationResultsFromParent.forEach(f => f($registerAs)));\n  }\n\n  return computed(() => {\n    return Object.assign({}, unref(validationResults.value), childResults.value);\n  });\n}\n\nexport { CollectFlag, useVuelidate as default, useVuelidate };\n","import { unref } from 'vue-demi';\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\n/**\n * Returns a standard ValidatorObject\n * Wraps a plain function into a ValidatorObject\n * @param {NormalizedValidator|Function} validator\n * @return {NormalizedValidator}\n */\n\nfunction normalizeValidatorObject(validator) {\n  return isFunction(validator.$validator) ? Object.assign({}, validator) : {\n    $validator: validator\n  };\n}\nfunction isPromise(object) {\n  return isObject(object) && isFunction(object.then);\n}\n/**\n * Unwraps a ValidatorResponse object, into a boolean.\n * @param {ValidatorResponse} result\n * @return {boolean}\n */\n\nfunction unwrapValidatorResponse(result) {\n  if (typeof result === 'object') return result.$valid;\n  return result;\n}\n/**\n * Unwraps a `NormalizedValidator` object, returning its validator function.\n * @param {NormalizedValidator | Function} validator\n * @return {function}\n */\n\nfunction unwrapNormalizedValidator(validator) {\n  return validator.$validator || validator;\n}\n\n/**\n * Allows attaching parameters to a validator\n * @param {Object} $params\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withParams($params, $validator) {\n  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to \"withParams\" should be an object, provided ${typeof $params}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$params = Object.assign({}, validatorObj.$params || {}, $params);\n  return validatorObj;\n}\n\n/**\n * @callback MessageCallback\n * @param {Object} params\n * @return String\n */\n\n/**\n * Attaches a message to a validator\n * @param {MessageCallback | String} $message\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withMessage($message, $validator) {\n  if (!isFunction($message) && typeof unref($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to \"withMessage\" should be string or a function returning a string, provided ${typeof $message}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$message = $message;\n  return validatorObj;\n}\n\n/**\n * @typedef {function(*): Promise<boolean|ValidatorResponse>} asyncValidator\n */\n\n/**\n * @typedef {Ref<*>[]|function(*): *} watchTargets\n */\n\n/**\n * Wraps validators that returns a Promise.\n * @param {asyncValidator} $validator\n * @param {watchTargets} $watchTargets\n * @return {{$async: boolean, $validator: asyncValidator, $watchTargets: watchTargets}}\n */\n\nfunction withAsync($validator, $watchTargets = []) {\n  const validatorObj = normalizeValidatorObject($validator);\n  return Object.assign({}, validatorObj, {\n    $async: true,\n    $watchTargets\n  });\n}\n\nfunction forEach(validators) {\n  return {\n    $validator(collection, ...others) {\n      // go over the collection. It can be a ref as well.\n      return unref(collection).reduce((previous, collectionItem) => {\n        // go over each property\n        const collectionEntryResult = Object.entries(collectionItem).reduce((all, [property, $model]) => {\n          // get the validators for this property\n          const innerValidators = validators[property] || {}; // go over each validator and run it\n\n          const propertyResult = Object.entries(innerValidators).reduce((all, [validatorName, currentValidator]) => {\n            // extract the validator. Supports simple and extended validators.\n            const validatorFunction = unwrapNormalizedValidator(currentValidator); // Call the validator, passing the VM as this, the value, current iterated object and the rest.\n\n            const $response = validatorFunction.call(this, $model, collectionItem, ...others); // extract the valid from the result\n\n            const $valid = unwrapValidatorResponse($response); // store the entire response for later\n\n            all.$data[validatorName] = $response;\n            all.$data.$invalid = !$valid || !!all.$data.$invalid;\n            all.$data.$error = all.$data.$invalid; // if not valid, get the $message\n\n            if (!$valid) {\n              let $message = currentValidator.$message || '';\n              const $params = currentValidator.$params || {}; // If $message is a function, we call it with the appropriate parameters\n\n              if (typeof $message === 'function') {\n                $message = $message({\n                  $pending: false,\n                  $invalid: !$valid,\n                  $params,\n                  $model,\n                  $response\n                });\n              } // save the error object\n\n\n              all.$errors.push({\n                $property: property,\n                $message,\n                $params,\n                $response,\n                $model,\n                $pending: false,\n                $validator: validatorName\n              });\n            }\n\n            return {\n              $valid: all.$valid && $valid,\n              $data: all.$data,\n              $errors: all.$errors\n            };\n          }, {\n            $valid: true,\n            $data: {},\n            $errors: []\n          });\n          all.$data[property] = propertyResult.$data;\n          all.$errors[property] = propertyResult.$errors;\n          return {\n            $valid: all.$valid && propertyResult.$valid,\n            $data: all.$data,\n            $errors: all.$errors\n          };\n        }, {\n          $valid: true,\n          $data: {},\n          $errors: {}\n        });\n        return {\n          $valid: previous.$valid && collectionEntryResult.$valid,\n          $data: previous.$data.concat(collectionEntryResult.$data),\n          $errors: previous.$errors.concat(collectionEntryResult.$errors)\n        };\n      }, {\n        $valid: true,\n        $data: [],\n        $errors: []\n      });\n    },\n\n    // collect all the validation errors into a 2 dimensional array, for each entry in the collection, you have an array of error messages.\n    $message: ({\n      $response\n    }) => $response ? $response.$errors.map(context => {\n      return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);\n    }) : []\n  };\n}\n\n// \"required\" core, used in almost every validator to allow empty values\nconst req = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return !!value.length;\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  if (value === false) {\n    return true;\n  }\n\n  if (value instanceof Date) {\n    // invalid date won't pass\n    return !isNaN(value.getTime());\n  }\n\n  if (typeof value === 'object') {\n    for (let _ in value) return true;\n\n    return false;\n  }\n\n  return !!String(value).length;\n};\n/**\n * Returns the length of an arbitrary value\n * @param {Array|Object|String} value\n * @return {number}\n */\n\nconst len = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return value.length;\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length;\n  }\n\n  return String(value).length;\n};\n/**\n * Regex based validator template\n * @param {RegExp} expr\n * @return {function(*=): boolean}\n */\n\nfunction regex(expr) {\n  return value => {\n    value = unref(value);\n    return !req(value) || expr.test(value);\n  };\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  withParams: withParams,\n  withMessage: withMessage,\n  withAsync: withAsync,\n  forEach: forEach,\n  req: req,\n  len: len,\n  regex: regex,\n  unwrap: unref,\n  unwrapNormalizedValidator: unwrapNormalizedValidator,\n  unwrapValidatorResponse: unwrapValidatorResponse,\n  normalizeValidatorObject: normalizeValidatorObject\n});\n\nvar alpha$1 = regex(/^[a-zA-Z]*$/);\n\n/**\n * Validate if value is alphabetical string.\n * @type {NormalizedValidator}\n */\n\nvar alpha = {\n  $validator: alpha$1,\n  $message: 'The value is not alphabetical',\n  $params: {\n    type: 'alpha'\n  }\n};\n\nvar alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);\n\n/**\n * Validate if value is alpha-numeric string.\n * @type {NormalizedValidator}\n */\n\nvar alphaNum = {\n  $validator: alphaNum$1,\n  $message: 'The value must be alpha-numeric',\n  $params: {\n    type: 'alphaNum'\n  }\n};\n\nvar numeric$1 = regex(/^\\d*(\\.\\d+)?$/);\n\n/**\n * Check whether a value is numeric.\n * @type NormalizedValidator\n */\n\nvar numeric = {\n  $validator: numeric$1,\n  $message: 'Value must be numeric',\n  $params: {\n    type: 'numeric'\n  }\n};\n\n/**\n * Check if a numeric value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {function(*=): boolean}\n */\n\nfunction between$1 (min, max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +unref(min) <= +value && +unref(max) >= +value;\n}\n\n/**\n * Checks if a value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {NormalizedValidator}\n */\n\nfunction between (min, max) {\n  return {\n    $validator: between$1(min, max),\n    $message: ({\n      $params\n    }) => `The value must be between ${$params.min} and ${$params.max}`,\n    $params: {\n      min,\n      max,\n      type: 'between'\n    }\n  };\n}\n\nconst emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nvar email$1 = regex(emailRegex);\n\n/**\n * Validate if value is an email.\n * @type {NormalizedValidator}\n */\n\nvar email = {\n  $validator: email$1,\n  $message: 'Value is not a valid email address',\n  $params: {\n    type: 'email'\n  }\n};\n\n/**\n * Check if a string is an IP Address\n * @param {String} value\n * @returns {boolean}\n */\n\nfunction ipAddress$1 (value) {\n  if (!req(value)) {\n    return true;\n  }\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const nibbles = value.split('.');\n  return nibbles.length === 4 && nibbles.every(nibbleValid);\n}\n\nconst nibbleValid = nibble => {\n  if (nibble.length > 3 || nibble.length === 0) {\n    return false;\n  }\n\n  if (nibble[0] === '0' && nibble !== '0') {\n    return false;\n  }\n\n  if (!nibble.match(/^\\d+$/)) {\n    return false;\n  }\n\n  const numeric = +nibble | 0;\n  return numeric >= 0 && numeric <= 255;\n};\n\n/**\n * Validate if value is an ipAddress string.\n * @type {NormalizedValidator}\n */\n\nvar ipAddress = {\n  $validator: ipAddress$1,\n  $message: 'The value is not a valid IP address',\n  $params: {\n    type: 'ipAddress'\n  }\n};\n\n/**\n * Check if value is a properly formatted Mac Address.\n * @param {String | Ref<String>} [separator]\n * @returns {function(*): boolean}\n */\n\nfunction macAddress$1 (separator = ':') {\n  return value => {\n    separator = unref(separator);\n\n    if (!req(value)) {\n      return true;\n    }\n\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;\n    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);\n  };\n}\n\nconst hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);\n\n/**\n * Validate if value is a valid Mac Address string.\n * @returns {NormalizedValidator}\n */\n\nfunction macAddress (separator) {\n  return {\n    $validator: macAddress$1(separator),\n    $message: 'The value is not a valid MAC Address',\n    $params: {\n      type: 'macAddress'\n    }\n  };\n}\n\n/**\n * Check if provided value has a maximum length\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction maxLength$1 (length) {\n  return value => !req(value) || len(value) <= unref(length);\n}\n\n/**\n * Validate the max length of a string.\n * @param {Number} max\n * @return {NormalizedValidator}\n */\n\nfunction maxLength (max) {\n  return {\n    $validator: maxLength$1(max),\n    $message: ({\n      $params\n    }) => `The maximum length allowed is ${$params.max}`,\n    $params: {\n      max,\n      type: 'maxLength'\n    }\n  };\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction minLength$1 (length) {\n  return value => !req(value) || len(value) >= unref(length);\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minLength (min) {\n  return {\n    $validator: minLength$1(min),\n    $message: ({\n      $params\n    }) => `This field should be at least ${$params.min} long`,\n    $params: {\n      min,\n      type: 'minLength'\n    }\n  };\n}\n\n/**\n * Validates if a value is empty.\n * @param {String | Array | Date | Object} value\n * @returns {boolean}\n */\n\nfunction required$1 (value) {\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  return req(value);\n}\n\n/**\n * Check if a value is empty or not.\n * @type {NormalizedValidator}\n */\n\nvar required = {\n  $validator: required$1,\n  $message: 'Value is required',\n  $params: {\n    type: 'required'\n  }\n};\n\nconst validate$1 = (prop, val) => prop ? req(val) : true;\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredIf$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate$1(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate$1(result, value);\n  };\n}\n\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredIf (prop) {\n  return {\n    $validator: requiredIf$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredIf',\n      prop\n    }\n  };\n}\n\nconst validate = (prop, val) => !prop ? req(val) : true;\n/**\n * Returns required if the passed property is falsy.\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredUnless$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate(result, value);\n  };\n}\n\n/**\n * Returns required unless the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredUnless (prop) {\n  return {\n    $validator: requiredUnless$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredUnless',\n      prop\n    }\n  };\n}\n\n/**\n * Check if two values are identical.\n * @param {*} equalTo\n * @return {function(*=): boolean}\n */\n\nfunction sameAs$1 (equalTo) {\n  return value => unref(value) === unref(equalTo);\n}\n\n/**\n * Check if two values are identical\n * @param {*} equalTo\n * @param {String} [otherName]\n * @return {NormalizedValidator}\n */\n\nfunction sameAs (equalTo, otherName = 'other') {\n  return {\n    $validator: sameAs$1(equalTo),\n    $message: ({\n      $params\n    }) => `The value must be equal to the ${otherName} value`,\n    $params: {\n      equalTo,\n      otherName,\n      type: 'sameAs'\n    }\n  };\n}\n\n/**\n * Regex taken from {@link https://gist.github.com/dperini/729294}\n */\n\nconst urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar url$1 = regex(urlRegex);\n\n/**\n * Check if a value is a url\n * @type {NormalizedValidator}\n */\n\nvar url = {\n  $validator: url$1,\n  $message: 'The value is not a valid URL address',\n  $params: {\n    type: 'url'\n  }\n};\n\nfunction _await$1(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction syncOr(validators) {\n  return function (...args) {\n    return validators.reduce((valid, fn) => {\n      if (unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, false);\n  };\n}\n\nfunction asyncOr(validators) {\n  return function (...args) {\n    const _this = this;\n\n    return validators.reduce(function (valid, fn) {\n      return _await$1(valid, function (r) {\n        return unwrapValidatorResponse(r) ? r : unwrapNormalizedValidator(fn).apply(_this, args);\n      });\n    }, Promise.resolve(false));\n  };\n}\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction or$1(...validators) {\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {NormalizedValidator}\n */\n\nfunction or (...validators) {\n  return withParams({\n    type: 'or'\n  }, withMessage('The value does not match any of the provided validators', or$1(...validators)));\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n/**\n *\n * @param validators\n * @return {function(...[*]=): Promise<boolean>}\n */\n\n\nfunction syncAnd(validators) {\n  return function (...args) {\n    return validators.reduce((valid, fn) => {\n      if (!unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, true);\n  };\n}\n\nfunction asyncAnd(validators) {\n  return function (...args) {\n    const _this = this;\n\n    return validators.reduce(function (valid, fn) {\n      return _await(valid, function (r) {\n        return unwrapValidatorResponse(r) ? unwrapNormalizedValidator(fn).apply(_this, args) : r;\n      });\n    }, Promise.resolve(true));\n  };\n}\n/**\n * Returns true when all validators are truthy\n * @param {...(NormalizedValidator | Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction and$1(...validators) {\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Validate if all validators match.\n * @param {...*} validators\n * @returns {NormalizedValidator}\n */\n\nfunction and (...validators) {\n  return withParams({\n    type: 'and'\n  }, withMessage('The value does not match all of the provided validators', and$1(...validators)));\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {function(*=, *=): boolean}\n */\n\nfunction not$1 (validator) {\n  return function (value, vm) {\n    if (!req(value)) return true;\n    const response = unwrapNormalizedValidator(validator).call(this, value, vm);\n    if (!isPromise(response)) return !unwrapValidatorResponse(response);\n    return response.then(r => !unwrapValidatorResponse(r));\n  };\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {NormalizedValidator}\n */\n\nfunction not (validator) {\n  return {\n    $validator: not$1(validator),\n    $message: `The value does not match the provided validator`,\n    $params: {\n      type: 'not'\n    }\n  };\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {function(*=): boolean}\n */\n\nfunction minValue$1 (min) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value >= +unref(min);\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minValue (min) {\n  return {\n    $validator: minValue$1(min),\n    $message: ({\n      $params\n    }) => `The minimum value allowed is ${$params.min}`,\n    $params: {\n      min,\n      type: 'minValue'\n    }\n  };\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @returns {function(*=): boolean}\n */\n\nfunction maxValue$1 (max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value <= +unref(max);\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @return {NormalizedValidator}\n */\n\nvar maxValue = (max => ({\n  $validator: maxValue$1(max),\n  $message: ({\n    $params\n  }) => `The maximum value is ${$params.max}`,\n  $params: {\n    max,\n    type: 'maxValue'\n  }\n}));\n\n// ^-[0-9]+$ - only for negative integer (minus sign without at least 1 digit is not a number)\n\nvar integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);\n\n/**\n * Validate if value is integer.\n * @type {NormalizedValidator}\n */\n\nvar integer = {\n  $validator: integer$1,\n  $message: 'Value is not an integer',\n  $params: {\n    type: 'integer'\n  }\n};\n\nvar decimal$1 = regex(/^[-]?\\d*(\\.\\d+)?$/);\n\n/**\n * Validate if value is decimal number.\n * @type {NormalizedValidator}\n */\n\nvar decimal = {\n  $validator: decimal$1,\n  $message: 'Value must be decimal',\n  $params: {\n    type: 'decimal'\n  }\n};\n\n/**\n * Creates a translatable version of `withMessage` helper.\n * @param {function} t - the translation function of your choice\n * @param {function} [messagePath] - a function to generate the message path, passed to `t` for each message. By default it is `validations.${$validator}`\n * @param {function} [messageParams] - a function to augment the params, passed to `t` for each message.\n */\n\nfunction createI18nMessage({\n  t,\n  messagePath = ({\n    $validator\n  }) => `validations.${$validator}`,\n  messageParams = params => params\n}) {\n  return function withI18nMessage(validator, {\n    withArguments = false,\n    messagePath: localMessagePath = messagePath,\n    messageParams: localMessageParams = messageParams\n  } = {}) {\n    function message(props) {\n      return t(localMessagePath(props), localMessageParams(Object.assign({\n        model: props.$model,\n        property: props.$property,\n        pending: props.$pending,\n        invalid: props.$invalid,\n        response: props.$response,\n        validator: props.$validator,\n        propertyPath: props.$propertyPath\n      }, props.$params)));\n    }\n\n    if (withArguments && typeof validator === 'function') {\n      return (...args) => withMessage(message, validator(...args));\n    }\n\n    return withMessage(message, validator);\n  };\n}\n\nexport { alpha, alphaNum, and, between, createI18nMessage, decimal, email, common as helpers, integer, ipAddress, macAddress, maxLength, maxValue, minLength, minValue, not, numeric, or, required, requiredIf, requiredUnless, sameAs, url };\n","\r\nimport { defineComponent, reactive } from \"vue\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { email, minLength, required } from \"@vuelidate/validators\";\r\nimport { User } from \"@/core/models/user.model\";\r\nimport { RouterPaths } from \"@/core/consts/router-paths.enum\";\r\n\r\nexport default defineComponent({\r\n  name: \"sign-in-form\",\r\n  setup() {\r\n    const state = reactive({\r\n      email: null,\r\n      password: null\r\n    });\r\n\r\n    const rules = {\r\n      email: { required, email },\r\n      password: { required, minLength: minLength(6) }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, state, { $autoDirty: true });\r\n    return { state, v$ };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      const result = await this.v$.$validate();\r\n      if (!result) return;\r\n\r\n      await this.$store.dispatch(\"login\", this.getUser(this.state))\r\n        .then(() => this.$router.push(`/${RouterPaths.HOME}`));\r\n    },\r\n\r\n    getUser(state: any): User {\r\n      return {\r\n        email: state.email,\r\n        password: state.password\r\n      };\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./sign-in-form.vue?vue&type=template&id=be8a5ec8&scoped=true&ts=true\"\nimport script from \"./sign-in-form.vue?vue&type=script&lang=ts\"\nexport * from \"./sign-in-form.vue?vue&type=script&lang=ts\"\n\nimport \"./sign-in-form.vue?vue&type=style&index=0&id=be8a5ec8&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\PROJECTS\\\\FRONT-END\\\\messenger\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-be8a5ec8\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-535891ec\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"form__group\" }, [\n  /*#__PURE__*/_createElementVNode(\"h1\", { class: \"form__title title-semi-32\" }, \"Sign up\")\n], -1))\nconst _hoisted_2 = { class: \"form__row_wrapper\" }\nconst _hoisted_3 = {\n  class: \"form__col_wrapper\",\n  style: {\"margin-right\":\"30px\"}\n}\nconst _hoisted_4 = { class: \"form__group\" }\nconst _hoisted_5 = { class: \"form__input_container\" }\nconst _hoisted_6 = { class: \"form__group\" }\nconst _hoisted_7 = { class: \"form__input_container\" }\nconst _hoisted_8 = { class: \"form__group\" }\nconst _hoisted_9 = { class: \"form__input_container\" }\nconst _hoisted_10 = { class: \"form__col_wrapper\" }\nconst _hoisted_11 = { class: \"form__group\" }\nconst _hoisted_12 = { class: \"form__input_container\" }\nconst _hoisted_13 = { class: \"form__group\" }\nconst _hoisted_14 = { class: \"form__input_container\" }\nconst _hoisted_15 = { class: \"form__group\" }\nconst _hoisted_16 = { class: \"form__input_container\" }\nconst _hoisted_17 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers(($event: any) => (_ctx.submit()), [\"prevent\"])),\n    novalidate: \"\"\n  }, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"Email\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n                'input--error' : _ctx.v$.email.$error,\r\n                'input--success' : !_ctx.v$.email.$error && _ctx.state.email\r\n              }]),\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.state.email) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.email]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"username\",\n              type: \"text\",\n              placeholder: \"Username\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n                'input--error' : _ctx.v$.username.$error,\r\n                'input--success' : !_ctx.v$.username.$error && _ctx.state.username\r\n              }]),\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.state.username) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.username]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createElementVNode(\"div\", _hoisted_9, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"fullname\",\n              type: \"text\",\n              placeholder: \"Full name\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n                'input--error' : _ctx.v$.fullname.$error,\r\n                'input--success' : !_ctx.v$.fullname.$error && _ctx.state.fullname\r\n              }]),\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.state.fullname) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.fullname]\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_10, [\n        _createElementVNode(\"div\", _hoisted_11, [\n          _createElementVNode(\"div\", _hoisted_12, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"birthday\",\n              type: \"date\",\n              placeholder: \"Birthday\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n                'input--error' : _ctx.v$.birthday.$error,\r\n                'input--success' : !_ctx.v$.birthday.$error && _ctx.state.birthday\r\n              }]),\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.state.birthday) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.birthday]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_13, [\n          _createElementVNode(\"div\", _hoisted_14, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\",\n              autocomplete: \"new-password\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n            'input--error' : _ctx.v$.password.$error,\r\n            'input--success' : !_ctx.v$.password.$error && _ctx.state.password\r\n          }]),\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.state.password) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.password]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_15, [\n          _createElementVNode(\"div\", _hoisted_16, [\n            _withDirectives(_createElementVNode(\"input\", {\n              name: \"confirm\",\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              autocomplete: \"new-password\",\n              class: _normalizeClass([\"common-input title-regular-14\", {\r\n            'input--error' : _ctx.v$.confirm.$error,\r\n            'input--success' : !_ctx.v$.confirm.$error && _ctx.state.confirm\r\n          }]),\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.state.confirm) = $event))\n            }, null, 2), [\n              [_vModelText, _ctx.state.confirm]\n            ])\n          ])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"form__btn primary-btn\",\n      type: \"submit\",\n      disabled: _ctx.v$.$invalid\n    }, \"Sign up\", 8, _hoisted_17)\n  ], 32))\n}","\r\nimport { computed, defineComponent, reactive } from \"vue\";\r\nimport { email, minLength, required, sameAs } from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport {User} from \"@/core/models/user.model\";\r\nimport NotificationService from \"@/services/notification.service\";\r\nimport { RouterPaths } from \"@/core/consts/router-paths.enum\";\r\n\r\nexport default defineComponent({\r\n  name: \"sign-up-form\",\r\n  setup() {\r\n    const state = reactive({\r\n      email: \"\",\r\n      username: \"\",\r\n      fullname: \"\",\r\n      birthday: \"\",\r\n      password: \"\",\r\n      confirm: \"\"\r\n    });\r\n\r\n    const rules = computed(() => {\r\n      return {\r\n        email: { required, email },\r\n        username: { required, minLength: minLength(3) },\r\n        fullname: { required, minLength: minLength(3) },\r\n        birthday: { required },\r\n        password: { required, minLength: minLength(6) },\r\n        confirm: { required, sameAs: sameAs(state.password) }\r\n      };\r\n    });\r\n\r\n    const v$ = useVuelidate(rules, state, { $autoDirty: true });\r\n    return { state, v$ };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      const result = await this.v$.$validate();\r\n      if (!result) return;\r\n\r\n      await this.$store.dispatch(\"registration\", this.getUser(this.state))\r\n        .then(() => this.$emit('toSignIn'));\r\n    },\r\n\r\n    getUser(state: any): User {\r\n      return {\r\n        email: state.email,\r\n        username: state.username,\r\n        fullname: state.fullname,\r\n        birthday: state?.birthday,\r\n        password: state.password,\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { render } from \"./sign-up-form.vue?vue&type=template&id=535891ec&scoped=true&ts=true\"\nimport script from \"./sign-up-form.vue?vue&type=script&lang=ts\"\nexport * from \"./sign-up-form.vue?vue&type=script&lang=ts\"\n\nimport \"./sign-up-form.vue?vue&type=style&index=0&id=535891ec&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\PROJECTS\\\\FRONT-END\\\\messenger\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-535891ec\"]])\n\nexport default __exports__","\r\nimport SignInForm from \"@/components/authorization-forms/sign-in-form.vue\";\r\nimport SignUpForm from \"@/components/authorization-forms/sign-up-form.vue\";\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      activeIndex: 0,\r\n    }\r\n  },\r\n  methods: {\r\n    setActiveIndex(index: number): void {\r\n      this.activeIndex = index;\r\n    }\r\n  },\r\n  components: { SignUpForm, SignInForm }\r\n});\r\n","import { render } from \"./Login.vue?vue&type=template&id=51d57880&scoped=true&ts=true\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\n\nimport \"./Login.vue?vue&type=style&index=0&id=51d57880&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\PROJECTS\\\\FRONT-END\\\\messenger\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-51d57880\"]])\n\nexport default __exports__"],"sourceRoot":""}